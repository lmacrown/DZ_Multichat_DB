blocking : 동기화. 작업을 다른 프로세스에 맡기고 해당 프로세스는 작업을 쉼
nonblocking : 비동기화. 작업을 다른 프로세스에 맡기고 해당 프로세스는 다른 작업을 함
listener : 이벤트를 처리하는 코드
notify : 일시정지 된 스레드 중 하나를 작업 시킴
notifyall : 일시정지 된 스레드 모두를 작업 시킴
생산자 소비자 패턴 : 작업을 생산해 내는 주체와 작업을 처리하는 주체를 분리
poll : 데이터를 보내고 데이터가 없으면 null을 리턴함. nonblocking
take : 데이터를 보내고 데이터가 없으면 대기함. blockng
생산자 소비자 패턴 : 작업을 생산해 주는 주제촤 작업을 처리하는 주체를 분리
Producer는 작업을 큐에 쌓아두고 Consumer는 큐에 쌓여있는 작업을 처리
separatorchar : 파일의 구분자를 리턴
Message.of : 시간까지 같이 기록
callablestatement : 함수나 프로시저를 호출
runable과 callable의 차이점 : 리턴값의 유무
Future : 비동기적인 연산의 결과를 표현하는 클래스. 스레드가 작동하고 나올 값을 기다리고 값을 받은 후 다음 연산을 수행
멀티쓰레드 환경에서 처리된 데이터를 다른 쓰레드에 전달 가능
recordSet : 현재 레코드를 위치를 이동
TDD : 테스트 주도 개발. 테스트 케이스를 작성 한 후 실제 코드를 개발하여 리팩토링
후처리 방법
1. 스레드 안에 Listener를 만들어서 스레드 종료시에 호출.
2. 스레드 작업을 이벤트로 처리
1급 함수 : 다른 변수와 동일하게 다루는 언어. 람다함수로 변환 가능. 인터페이스 안에 들어있는 메소드는 1개뿐임
Object 함수에 선언된 함수는 제외